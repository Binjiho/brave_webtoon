buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //querydsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    /*mysql*/
    implementation 'com.mysql:mysql-connector-j:8.0.33'
    /* Thymeleaf Layout */
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    /* Log4J2 */
    /*  implementation 'org.springframework.boot:spring-boot-starter-log4j2' */
    implementation 'com.zaxxer:HikariCP:5.0.1'

    /*jsoup*/
    implementation 'org.jsoup:jsoup:1.16.1'

    /*swagger spring-doc*/
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

    /* spring-security */
    implementation 'org.springframework.boot:spring-boot-starter-security'

    /*io.jsonwebtoken/jjwt-api*/
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    /* querydsl */
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // querydsl 라이브러리
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}" //  Querydsl 관련 코드 생성 기능 제공


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs querydslDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath // 컴파일이 될때 같이 수행
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl // Q파일을 생성해준다.
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(querydslDir)
}

